INSERT INTO nodes (type, title, description, parent_node) VALUES
('SKILL', 'Internet', 'The Internet is a global network of computers connected to each other which communicate through a standardized set of protocols.', NULL),
('TASK', 'How does the Internet Work?', 'The Internet is a global network of computers connected to each other which communicate through a standardized set of protocols.', 1),
('LINK', 'How Does the Internet Work?', 'https://cs.fyi/guide/how-does-internet-work', 2),
('LINK', 'How Does the Internet Work? MDN Docs', 'https://developer.mozilla.org/en-US/docs/Learn/Common_questions/How_does_the_Internet_work', 2),
('TASK', 'What is HTTP?', 'HTTP is the TCP/IP based application layer communication protocol which standardizes how the client and server communicate with each other. HTTP follows a classical “Client-Server model” with a client opening a connection request, then waiting until it receives a response. HTTP is a stateless protocol, that means that the server does not keep any data (state) between two requests.', 1),
('LINK', 'What is HTTP?', 'https://www.cloudflare.com/en-gb/learning/ddos/glossary/hypertext-transfer-protocol-http/', 5),
('LINK', 'Everything you need to know about HTTP', 'https://cs.fyi/guide/http-in-depth', 5),
('TASK', 'What is a Domain Name?', 'A domain name is a unique, easy-to-remember address used to access websites, such as ‘google.com’, and ‘facebook.com’. Users can connect to websites using domain names thanks to the Domain Name System (DNS).', 1),
('LINK', 'What is a Domain Name?', 'https://developer.mozilla.org/en-US/docs/Learn/Common_questions/What_is_a_domain_name', 8),
('LINK', 'What is a Domain Name? | Domain name vs. URL', 'https://www.cloudflare.com/en-gb/learning/dns/glossary/what-is-a-domain-name/', 8),
('TASK', 'What is Hosting?', 'Web hosting is an online service that allows you to publish your website files onto the internet. So, anyone who has access to the internet has access to your website.', 1),
('LINK', 'What Is Web Hosting? Explained', 'https://www.youtube.com/watch?v=htbY9-yggB0', 11),
('LINK', 'Different Types of Web Hosting Explained', 'https://www.youtube.com/watch?v=AXVZYzw8geg', 11),
('TASK', 'DNS and how it Works?', 'The Domain Name System (DNS) is the phonebook of the Internet. Humans access information online through domain names, like nytimes.com or espn.com. Web browsers interact through Internet Protocol (IP) addresses. DNS translates domain names to IP addresses so browsers can load Internet resources.', 1),
('LINK', 'What is DNS?', 'https://www.cloudflare.com/en-gb/learning/dns/what-is-dns/', 14),
('LINK', 'DNS and How does it Work?', 'https://www.youtube.com/watch?v=Wj0od2ag5sk', 14),
('TASK', 'Browsers and how they Work?', 'A web browser is a software application that enables a user to access and display web pages or other online content through its graphical user interface.', 1),
('LINK', 'How Browsers Work', 'https://www.html5rocks.com/en/tutorials/internals/howbrowserswork/', 17),
('LINK', 'How Do Web Browsers Work?', 'https://www.youtube.com/watch?v=WjDrMKZWCt0', 17),
('SKILL', 'HTML', 'HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.', NULL),
('TASK', 'Learn the basics', 'HTML stands for HyperText Markup Language. It is used on the frontend and gives the structure to the webpage which you can style using CSS and make interactive using JavaScript.', 20),
('LINK', 'MDN Docs: Getting Started with HTML', 'https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Getting_started', 21),
('LINK', 'web.dev: Learn HTML', 'https://web.dev/learn/html', 21),
('TASK', 'Writing Semantic HTML', 'Semantic element clearly describes its meaning to both the browser and the developer. In HTML, semantic element are the type of elements that can be used to define different parts of a web page such as <form>, <table>, <article>, <header>, <footer>, etc.', 20),
('LINK', 'Guide to Writing Semantic HTML', 'https://cs.fyi/guide/writing-semantic-html', 24),
('LINK', 'HTML Best Practices – How to Build a Better HTML-Based Website', 'https://www.freecodecamp.org/news/html-best-practices/', 24),
('TASK', 'Forms and Validations', 'Before submitting data to the server, it is important to ensure all required form controls are filled out, in the correct format. This is called client-side form validation, and helps ensure data submitted matches the requirements set forth in the various form controls.', 20),
('LINK', 'MDN Web Docs: Client-side form validation', 'https://developer.mozilla.org/en-US/docs/Learn/Forms/Form_validation', 27),
('LINK', 'Learn Forms by web.dev', 'https://web.dev/learn/forms/', 27),
('TASK', 'Accessibility', 'Web accessibility means that websites, tools, and technologies are designed and developed in such a way that people with disabilities can use them easily.', 20),
('LINK', 'Developing for Web Accessibility by W3C WAI', 'https://www.w3.org/WAI/tips/developing/', 30),
('LINK', 'MDN Accessibility', 'https://developer.mozilla.org/en-US/docs/Web/Accessibility', 30),
('TASK', 'SEO Basics', 'SEO or Search Engine Optimization is the technique used to optimize your website for better rankings on search engines such as Google, Bing etc.', 20),
('LINK', 'SEO Guide', 'https://github.com/seo/guide', 33),
('LINK', 'SEO for Developers', 'https://medium.com/welldone-software/seo-for-developers-a-quick-overview-5b5b7ce34679', 33),
('SKILL', 'CSS', 'CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.', NULL),
('TASK', 'Learn the basics', 'CSS or Cascading Style Sheets is the language used to style the frontend of any website. CSS is a cornerstone technology of the World Wide Web, alongside HTML and JavaScript.', 34),
('LINK', 'web.dev — Learn CSS', 'https://web.dev/learn/css/', 37),
('LINK', 'Learn to Code HTML & CSS', 'https://learn.shayhowe.com/html-css/building-your-first-web-page/', 37),
('TASK', 'Making layouts', 'Float, grid, flexbox, positioning, display and box model are some of the key topics that are used for making layouts. Use the resources below to learn about these topics:', 34),
('LINK', 'Learn and Practice Flexbox', 'https://flexboxfroggy.com/', 40),
('LINK', 'A Complete Guide to Grid', 'https://css-tricks.com/snippets/css/complete-guide-grid', 40),
('SKILL', 'JavaScript', 'JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.', NULL),
('TASK', 'Learn the basics', 'JavaScript allows you to add interactivity to your pages. Common examples that you may have seen on the websites are sliders, click interactions, popups and so on.', 43),
('LINK', 'W3Schools – JavaScript Tutorial', 'https://www.w3schools.com/js/', 44),
('LINK', 'Build a Netflix Landing Page Clone with HTML, CSS & JS', 'https://youtu.be/P7t13SGytRk?t=22', 44),
('TASK', 'Learn DOM Manipulation', 'The Document Object Model (DOM) is a programming interface built for HTML and XML documents. It represents the page that allows programs and scripts to dynamically update the document structure, content, and style. With DOM, we can easily access and manipulate tags, IDs, classes, attributes, etc.', 43),
('LINK', 'DOM Tree', 'https://javascript.info/dom-nodes', 47),
('LINK', 'What is the DOM?', 'https://www.freecodecamp.org/news/what-is-the-dom-document-object-model-meaning-in-javascript/', 47),
('TASK', 'Fetch API / Ajax (XHR)', 'Ajax is the technique that lets us send and receive the data asynchronously from the servers e.g. updating the user profile or asynchronously fetching the list of searched products without reloading the page.', 43),
('LINK', 'Fetch API MDN Docs', 'https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API', 50),
('LINK', 'Introduction to Fetch', 'https://web.dev/introduction-to-fetch/', 50),
('SKILL', 'Version Control Systems', 'Version control systems allow you to track changes to your codebase/files over time. They allow you to go back to some previous version of the codebase without any issues. Also, they help in collaborating with people working on the same code – if you’ve ever collaborated with other people on a project, you might already know the frustration of copying and merging the changes from someone else into your codebase; version control systems allow you to get rid of this issue.', NULL),
('TASK', 'GIT', 'Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.', 53),
('LINK', 'Learn Git with Tutorials, News and Tips - Atlassian', 'https://www.atlassian.com/git', 54),
('LINK', 'Tutorial: Git for Absolutely Everyone', 'https://thenewstack.io/tutorial-git-for-absolutely-everyone/', 54),
('SKILL', 'VCS Hosting', 'There are different repository hosting services with the most famous one being GitHub, GitLab and BitBucket. I would recommend creating an account on GitHub because that is where most of the OpenSource work is done and most of the developers are.', NULL),
('TASK', 'GitHub', 'GitHub is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.', 57),
('LINK', 'GitHub: Quickstart', 'https://docs.github.com/en/get-started/quickstart/hello-world', 58),
('LINK', 'What is GitHub?', 'https://www.youtube.com/watch?v=w3jLJU7DT5E', 58),
('TASK', 'GitLab', 'GitLab is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.', 57),
('LINK', 'GitLab Documentation', 'https://docs.gitlab.com/', 61),
('LINK', 'Development: Connect git to GitLab for Small Projects', 'https://thenewstack.io/development-connect-git-to-gitlab-for-small-projects/', 61),
('TASK', 'BitBucket', 'BitBucket is a provider of internet hosting for software development and version control using Git. It offers the distributed version control and source code management functionality of Git, plus its own features.', 57),
('LINK', 'How to use BitBucket?', 'https://bitbucket.org/product/guides', 64),
('LINK', 'BitBucket Website', 'https://bitbucket.com/', 64),
('SKILL', 'Package Managers', 'Package managers allow you to manage the dependencies (external code written by you or someone else) that your project needs to work correctly.', NULL),
('TASK', 'Yarn', 'Yarn is a software packaging system developed in 2016 by Facebook for Node.js JavaScript runtime environment that provides speed, consistency, stability, and security as an alternative to npm (package manager).', 67),
('LINK', 'Yarn - Getting Started', 'https://yarnpkg.com/en/docs/getting-started', 68),
('LINK', 'Yarn Crash Course', 'https://www.youtube.com/watch?v=g9_6KmiBISk', 68),
('TASK', 'pnpm', 'PNPM is an alternative package manager for Node. js which stands for “Performant NPM”. The main purpose of PNPM is to hold all the packages at a global (centralized) store and use them if needed by other projects too by creating hard links to it.', 67),
('LINK', 'Official Website', 'https://pnpm.io/', 71),
('LINK', 'Meet PNPM: The Faster, More Performant NPM', 'https://blog.bitsrc.io/pnpm-javascript-package-manager-4b5abd59dc9', 71),
('TASK', 'npm', 'npm is a package manager for the JavaScript programming language maintained by npm, Inc. npm is the default package manager for the JavaScript runtime environment Node.js.', 67),
('LINK', 'How to NPM', 'https://github.com/workshopper/how-to-npm', 74),
('LINK', 'NPM tutorial for Beginners', 'https://www.youtube.com/watch?v=2V1UUhBJ62Y', 74),
('SKILL', 'Pick a Framework', 'Web frameworks are designed to write web applications. Frameworks are collections of libraries that aid in the development of a software product or website. Frameworks for web application development are collections of various tools. Frameworks vary in their capabilities and functions, depending on the tasks set. They define the structure, establish the rules, and provide the development tools required.', NULL),
('TASK', 'React', 'React is the most popular front-end JavaScript library for building user interfaces. React can also render on the server using Node and power mobile apps using React Native.', 77),
('LINK', 'React Website', 'https://react.dev/', 78),
('LINK', 'Official Getting Started', 'https://react.dev/learn/tutorial-tic-tac-toe', 78),
('TASK', 'Vue.js', 'Vue.js is an open-source JavaScript framework for building user interfaces and single-page applications. It is mainly focused on front end development.', 77),
('LINK', 'Vue.js Website', 'https://vuejs.org/', 81),
('LINK', 'Official Getting Started', 'https://vuejs.org/v2/guide/', 81),
('TASK', 'Angular', 'Angular is a component based front-end development framework built on TypeScript which includes a collection of well-integrated libraries that include features like routing, forms management, client-server communication, and more.', 77),
('LINK', 'Official - Getting started with Angular', 'https://angular.io/start', 84),
('LINK', 'Angular for Beginners Course [Full Front End Tutorial with TypeScript]', 'Angular for Beginners Course [Full Front End Tutorial with TypeScript]', 84),
('TASK', 'Svelte', 'Svelte is a javascript framework that unlike Vue and React does not use vertical DOM diffing but instead knows exactly what and where to update when the state changes. It’s mainly focused on frontend and building user interfaces.', 77),
('LINK', 'Svelte Documentation', 'https://svelte.dev/docs', 87),
('LINK', 'Svelte Course Playlist for beginners', 'https://www.youtube.com/playlist?list=PL4cUxeGkcC9hlbrVO_2QFVqVPhlZmz7tO', 87),
('TASK', 'SolidJS', 'Solid is a reactive JavaScript toolkit for building user interfaces without a virtual DOM. To ensure that only the relevant code is executed when a state update occurs, it compiles templates down to real DOM nodes once and wraps modifications into fine-grained reactions.', 77),
('LINK', 'Official Website - SolidJS', 'https://www.solidjs.com/', 90),
('LINK', 'SolidJS Tutorial', 'https://www.solidjs.com/tutorial/introduction_basics', 90),
('TASK', 'Qwik', 'Qwik is a new kind of web framework that can deliver instant loading web applications at any size or complexity. Your sites and apps can boot with about 1kb of JS (regardless of application complexity), and achieve consistent performance at scale.', 77),
('LINK', 'Official Website', 'https://qwik.builder.io/', 93),
('SKILL', 'Writing CSS', 'The way we write CSS in our modern front-end applications is completely different from how we used to write CSS before. There are methods such as Styled Components, CSS Modules, Styled JSX, Emotion, etc', NULL),
('TASK', 'Tailwind CSS', 'CSS Framework that provides atomic CSS classes to help you style components e.g. flex, pt-4, text-center and rotate-90 that can be composed to build any design, directly in your markup.', 95),
('LINK', 'Tailwind Website', 'https://tailwindcss.com/', 96),
('LINK', 'Should You Use Tailwind CSS?', 'https://www.youtube.com/watch?v=hdGsFpZ0J2E', 96),
('TASK', 'Radix UI', 'An open-source UI component library for building high-quality, accessible design systems and web apps.', 95),
('LINK', 'Official Website', 'https://www.radix-ui.com/', 99),
('LINK', 'Official Documentation', 'https://www.radix-ui.com/docs/primitives/overview/introduction', 99),
('TASK', 'Shadcn UI', 'Shadcn UI are beautifully designed components that you can copy and paste into your apps. Accessible. Customizable. Open Source. They are built with Tailwind CSS and Radix UI.', 95),
('LINK', 'Official Website', 'https://ui.shadcn.com/', 102),
('LINK', 'Official GitHub Repository', 'https://github.com/shadcn-ui/ui', 102),
('SKILL', 'CSS Architecture', 'CSS is notoriously difficult to manage in large, complex, rapidly-iterated systems. There are different ways of writing CSS that allows in writing more maintainable CSS.', NULL),
('TASK', 'BEM', 'The Block, Element, Modifier methodology (commonly referred to as BEM) is a popular naming convention for classes in HTML and CSS. Developed by the team at Yandex, its goal is to help developers better understand the relationship between the HTML and CSS in a given project.', 105),
('LINK', 'BEM Official Website', 'https://en.bem.info/', 106),
('LINK', 'BEM Documentation', 'https://en.bem.info/methodology/quick-start', 106),
('SKILL', 'CSS Preprocessors', 'CSS Preprocessors are scripting languages that extend the default capabilities of CSS. They enable us to use logic in our CSS code, such as variables, nesting, inheritance, mixins, functions, and mathematical operations.', NULL),
('TASK', 'Sass', 'Sass is a preprocessor scripting language that is interpreted or compiled into Cascading Style Sheets. It lets you write maintainable CSS and provides features like variable, nesting, mixins, extension, functions, loops, conditionals and so on.', 109),
('LINK', 'Sass Website', 'https://sass-lang.com/', 106),
('LINK', 'Official Documentation', 'https://sass-lang.com/documentation', 106),
('TASK', 'PostCSS', 'PostCSS is a tool for transforming styles with JS plugins. These plugins can lint your CSS, support variables and mixins, transpile future CSS syntax, inline images, and more.', 109),
('LINK', 'Official Website', 'https://postcss.org/', 113),
('SKILL', 'Build Tools', 'Task runners automatically execute commands and carry out processes behind the scenes. This helps automate your workflow by performing mundane, repetitive tasks that you would otherwise waste an egregious amount of time repeating yourself. Common usages of task runners include numerous development tasks such as: spinning up development servers, compiling code (ex. SCSS to CSS), running linters, serving files up from a local port on your computer, and many more!', NULL),
('SKILL', 'Module Bundlers', 'A module bundler is a tool that takes pieces of JavaScript and their dependencies and bundles them into a single file, usually for use in the browser. You may have used tools such as Browserify, Webpack, Rollup or one of many others. It usually starts with an entry file, and from there it bundles up all of the code needed for that entry file.', NULL),
('TASK', 'Vite', 'Vite is a build tool that aims to provide a faster and leaner development experience for modern web projects.', 116),
('LINK', 'Vite Website', 'https://vitejs.dev/', 117),
('LINK', 'Vite Documentation', 'https://vitejs.dev/guide', 117),
('TASK', 'esbuild', 'Our current build tools for the web are 10-100x slower than they could be. The main goal of the esbuild bundler project is to bring about a new era of build tool performance, and create an easy-to-use modern bundler along the way.', 116),
('LINK', 'Esbuild Official Website', 'https://esbuild.github.io/', 120),
('LINK', 'Esbuild Documentation', 'https://esbuild.github.io/api/', 120),
('TASK', 'Webpack ', 'Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.', 116),
('LINK', 'Webpack Official Website', 'https://webpack.js.org/', 123),
('LINK', 'Webpack Documentation', 'https://webpack.js.org/concepts/', 123),
('TASK', 'Rollup', 'Rollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application.', 116),
('LINK', 'Official Website and Docs', 'https://rollupjs.org/', 126),
('LINK', 'How to Set Up JavaScript Bundling Using Rollup', 'https://www.youtube.com/watch?v=ICYLOZuFMz8', 126),
('SKILL', 'Task Runners', 'Task Runner are tools to simplify certain tedious tasks of development, like automating sass/scss compilation, bundling assets, linting source code, and hot reloading local server.', NULL),
('TASK', 'npm Scripts', 'npm scripts are the entries in the scripts field of the package.json file. The scripts field holds an object where you can specify various commands and scripts that you want to expose.', 129),
('LINK', 'Introduction to npm scripts', 'https://www.geeksforgeeks.org/introduction-to-npm-scripts/', 130),
('LINK', 'Codevolution: npm scripts', 'https://www.youtube.com/watch?v=hHt3oVk3XVk', 130),
('SKILL', 'Linters formatters', 'A linter is a tool used to analyze code and discover bugs, syntax errors, stylistic inconsistencies, and suspicious constructs. Popular linters for JavaScript include ESLint, JSLint, and JSHint.', NULL),
('TASK', 'Prettier', 'Prettier is an opinionated code formatter with support for JavaScript, HTML, CSS, YAML, Markdown, GraphQL Schemas. By far the biggest reason for adopting Prettier is to stop all the on-going debates over styles.', 133),
('LINK', 'Prettier Website', 'https://prettier.io/', 134),
('LINK', 'Why Prettier', 'https://prettier.io/docs/en/why-prettier.html', 134),
('TASK', 'ESLint', 'With ESLint you can impose the coding standard using a certain set of standalone rules.', 133),
('LINK', 'ESLint Official Website', 'https://eslint.org/', 137),
('LINK', 'Introduction to ESLint', 'https://dev.to/shivambmgupta/eslint-what-why-when-how-5f1d', 137),
('SKILL', 'Testing your apps', 'Before delivering your application to users, you need to be sure that your app meets the requirements it was designed for, and that it doesn’t do any weird, unintended things (called ‘bugs’). To accomplish this, we ‘test’ our applications in different ways.', NULL),
('TASK', 'Vitest', 'Vitest is a fast Vite-native unit test framework with out-of-box ESM, TypeScript and JSX support. Works on React, Vue, Svelte and more projects created with Vite.', 140),
('LINK', 'Vitest Website', 'https://vitest.dev/', 141),
('TASK', 'Jest', 'Jest is a delightful JavaScript Testing Framework with a focus on simplicity. It works with projects using: Babel, TypeScript, Node, React, Angular, Vue and more!', 140),
('LINK', 'Jest Website', 'https://jestjs.io/', 143),
('LINK', 'JavaScript Testing With Jest', 'https://youtu.be/IPiUDhwnZxA?si=2_lE2bDo2fRuo2CU', 143),
('TASK', 'Playwright', 'Playwright is an open-source test automation library initially developed by Microsoft contributors. It supports programming languages such as Java, Python, C#, and NodeJS. Playwright comes with Apache 2.0 License and is most popular with NodeJS with Javascript/Typescript.', 140),
('LINK', 'Playwright Website', 'https://playwright.dev/', 146),
('LINK', 'Playwright Tutorial: Learn Basics and Setup', 'https://www.browserstack.com/guide/playwright-tutorial', 146),
('TASK', 'Cypress', 'Cypress framework is a JavaScript-based end-to-end testing framework built on top of Mocha – a feature-rich JavaScript test framework running on and in the browser, making asynchronous testing simple and convenient. It also uses a BDD/TDD assertion library and a browser to pair with any JavaScript testing framework.', 140),
('LINK', 'Official Website', 'https://www.cypress.io/', 149),
('LINK', 'Official Documentation', 'https://docs.cypress.io/guides/overview/why-cypress#Other', 149),
('SKILL', 'Authentication Strategies', 'Authentication strategies are methods or techniques used to verify the identity of a user or system in order to grant access to a protected resource. There are several different authentication strategies that can be used, including:', NULL),
('TASK', 'Basic Authentication', 'N/A', 152),
('TASK', 'Session Based Authentication', 'N/A', 152),
('TASK', 'Token Based Authentication', 'N/A', 152),
('TASK', 'JWT Authentication', 'N/A', 152),
('TASK', 'OAuth', 'N/A', 152),
('TASK', 'SSO', 'N/A', 152),
('SKILL', 'Web Security Basics', 'Web security refers to the protective measures taken by the developers to protect the web applications from threats that could affect the business.', NULL),
('TASK', 'CORS', 'Cross-Origin Resource Sharing (CORS) is an HTTP-header based mechanism that allows a server to indicate any origins (domain, scheme, or port) other than its own from which a browser should permit loading resources.', 159),
('LINK', 'Cross-Origin Resource Sharing (CORS)', 'https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS', 160),
('LINK', 'CORS in 100 Seconds', 'https://www.youtube.com/watch?v=4KHiSt0oLJ0', 160),
('TASK', 'HTTPS', 'HTTPS is a secure way to send data between a web server and a browser. Hypertext transfer protocol secure (HTTPS) is the secure version of HTTP, which is the primary protocol used to send data between a web browser and a website. HTTPS is encrypted in order to increase security of data transfer. This is particularly important when users transmit sensitive data, such as by logging into a bank account, email service, or health insurance provider', 159),
('LINK', 'What is HTTPS?', 'https://www.cloudflare.com/en-gb/learning/ssl/what-is-https/', 160),
('LINK', 'Why HTTPS Matters', 'https://developers.google.com/web/fundamentals/security/encrypt-in-transit/why-https', 160),
('TASK', 'Content Security Policy', 'Content Security Policy is a computer security standard introduced to prevent cross-site scripting, clickjacking and other code injection attacks resulting from execution of malicious content in the trusted web page context.', 159),
('LINK', 'MDN Content Security Policy (CSP)', 'https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP', 166),
('LINK', 'Google Devs Content Security Policy (CSP)', 'https://developers.google.com/web/fundamentals/security/csp', 166),
('TASK', 'OWASP Security Risks', 'OWASP Security Risks', 159),
('LINK', 'Wikipedia - OWASP', 'https://en.wikipedia.org/wiki/OWASP', 169),
('LINK', 'OWASP Top 10 Security Risks', 'https://sucuri.net/guides/owasp-top-10-security-vulnerabilities-2021/', 169),
('SKILL', 'Web Components', 'Web Components is a suite of different technologies allowing you to create reusable custom elements — with their functionality encapsulated away from the rest of your code — and utilize them in your web apps.', NULL),
('TASK', 'HTML Templates', 'The <template> HTML element is a mechanism for holding HTML that is not to be rendered immediately when a page is loaded but may be instantiated subsequently during runtime using JavaScript. Think of a template as a content fragment that is being stored for subsequent use in the document.', 172),
('LINK', 'Using templates and slots | MDN web docs', 'https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_templates_and_slots', 173),
('TASK', 'Custom Elements', 'One of the key features of the Web Components standard is the ability to create custom elements that encapsulate your functionality on an HTML page, rather than having to make do with a long, nested batch of elements that together provide a custom page feature.', 172),
('LINK', 'Using custom elements | MDN web docs', 'https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements', 175),
('TASK', 'Shadow DOM', 'An important aspect of web components is encapsulation — being able to keep the markup structure, style, and behavior hidden and separate from other code on the page so that different parts do not clash, and the code can be kept nice and clean. The Shadow DOM API is a key part of this, providing a way to attach a hidden separated DOM to an element.', 172),
('LINK', 'Using shadow DOM | MDN web docs', 'https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_shadow_DOM', 177),
('SKILL', 'Type Checkers', 'Type checker helps developers write code with fewer bugs by adding types to their code, trying to catch type errors within your code, and then removing them during compile time. Flow and TypeScript are two popular static type checkers for JavaScript.', NULL),
('TASK', 'TypeScript', 'TypeScript is a strongly typed programming language that builds on JavaScript, giving you better tooling at any scale.', 179),
('LINK', 'Official Docs for Deep Dives', 'https://www.typescriptlang.org/docs/', 180),
('LINK', 'Official Website', 'https://www.typescriptlang.org/', 180),
('SKILL', 'Server-side rendering', 'Server-side rendering refers to the process that the service side completes the HTML structure splicing of the page, sends it to the browser, and then binds the status and events for it to become a fully interactive page.', NULL),
('TASK', 'Next.js', 'Next.js is an open-source development framework built on top of Node.js enabling React based web applications functionalities such as server-side rendering and generating static websites.', 183),
('LINK', 'Official Website', 'https://nextjs.org/docs/getting-started', 184),
('LINK', 'Official Docs for Getting Started', 'https://nextjs.org/', 184),
('TASK', 'Remix', 'Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience. People are gonna love using your stuff.', 183),
('LINK', 'Official Website', 'https://remix.run/', 187),
('LINK', 'Official Docs for Getting Started', 'https://remix.run/docs/en/v1#getting-started', 187),
('TASK', 'Angular Universal', 'The Angular Universal project is a community driven project to expand on the core APIs from Angular (platform-server) to enable developers to do the server side rendering of Angular applications. It mainly uses express to render pages on pages on node.js server.', 183),
('LINK', 'Server-side rendering (SSR) with Angular Universal', 'https://angular.io/guide/universal', 190),
('TASK', 'Nuxt.js', 'Nuxt.js is a free and open source JavaScript library based on Vue.js, Node.js, Webpack and Babel.js. Nuxt is inspired by Next.js, which is a framework of similar purpose, based on React.js.', 183),
('LINK', 'Nuxt Website', 'https://nuxtjs.org/', 192),
('LINK', 'Nuxt Docs', 'https://nuxtjs.org/docs/get-started/installation', 192),
('TASK', 'Svelte Kit', 'Svelte Kit is a framework for building web applications with the Svelte JavaScript framework. It is designed to be a complete solution for building web applications, with support for server-side rendering, automatic code splitting, and optimized performance.', 183),
('LINK', 'Svelte Kit Official Website', 'https://kit.svelte.dev/', 195),
('LINK', 'Official Svelte Kit Docs', 'https://kit.svelte.dev/docs/introduction', 195),
('TASK', 'React', 'React is the most popular front-end JavaScript library for building user interfaces. React can also render on the server using Node and power mobile apps using React Native.', 183),
('LINK', 'Visit Dedicated React Roadmap', 'https://roadmap.sh/react', 198),
('LINK', 'React Website', 'https://react.dev/', 198),
('TASK', 'Angular', 'Angular is a component based front-end development framework built on TypeScript which includes a collection of well-integrated libraries that include features like routing, forms management, client-server communication, and more.', 183),
('LINK', 'Official - Getting started with Angular', 'https://angular.io/start', 201),
('TASK', 'Vue.js', 'Vue.js is an open-source JavaScript framework for building user interfaces and single-page applications. It is mainly focused on front end development.', 183),
('LINK', 'Vue.js Website', 'https://vuejs.org/', 203),
('LINK', 'Official Getting Started', 'https://vuejs.org/v2/guide/', 203),
('TASK', 'Svelte', 'Svelte is a javascript framework that unlike Vue and React does not use vertical DOM diffing but instead knows exactly what and where to update when the state changes. It’s mainly focused on frontend and building user interfaces.', 183),
('LINK', 'Svelte Website', 'https://svelte.dev/', 206),
('LINK', 'Svelte Documentation', 'https://svelte.dev/docs', 206),
('SKILL', 'Graphql', 'GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data. GraphQL provides a complete and understandable description of the data in your API, gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time, and enables powerful developer tools.', NULL),
('TASK', 'Apollo', 'Apollo is a platform for building a unified graph, a communication layer that helps you manage the flow of data between your application clients (such as web and native apps) and your back-end services.', 209),
('LINK', 'Apollo Website', 'https://www.apollographql.com/', 206),
('LINK', 'Official Docs', 'https://www.apollographql.com/docs/', 206),
('TASK', 'Relay Modern', 'Relay is a JavaScript client used in the browser to fetch GraphQL data. It’s a JavaScript framework developed by Facebook for managing and fetching data in React applications. It is built with scalability in mind in order to power complex applications like Facebook. The ultimate goal of GraphQL and Relay is to deliver instant UI-response interactions.', 209),
('LINK', 'Official Website', 'https://relay.dev/', 213),
('LINK', 'Introduction to Relay modern', 'https://relay.dev/docs/', 213),
('SKILL', 'Static Site Generators', 'A static site generator is a tool that generates a full static HTML website based on raw data and a set of templates. Essentially, a static site generator automates the task of coding individual HTML pages and gets those pages ready to serve to users ahead of time. Because these HTML pages are pre-built, they can load very quickly in users’ browsers.', NULL),
('TASK', 'Vuepress', 'VuePress is composed of two parts: a minimalistic static site generator (opens new window)with a Vue-powered theming system and Plugin API, and a default theme optimized for writing technical documentation. It was created to support the documentation needs of Vue’s own sub projects.', 216),
('LINK', 'Official Website', 'https://vuepress.vuejs.org/', 217),
('LINK', 'Official Docs for Getting Started', 'https://vuepress.vuejs.org/guide/getting-started.html', 217),
('TASK', 'Jekyll', 'Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site’s look and feel, URLs, the data displayed on the page, and more.', 216),
('LINK', 'Jekyll Website', 'https://jekyllrb.com/', 220),
('LINK', 'Jekyll Docs', 'https://jekyllrb.com/docs/', 220),
('TASK', 'Hugo', 'Hugo is the world’s fastest static website engine. It’s written in Go (aka Golang) and developed by bep, spf13 and friends.', 216),
('LINK', 'Official Website', 'https://gohugo.io/', 223),
('LINK', 'Official Docs for Getting Started', 'https://gohugo.io/documentation/', 223),
('TASK', 'Nuxt js', 'Nuxt.js is an open-source development framework built on top of Node.js enabling Vue based web applications functionalities such as server-side rendering and generating static websites.', 216),
('LINK', 'Official Website', 'https://nuxtjs.org/', 226),
('LINK', 'Official Docs for Getting Started', 'https://nuxtjs.org/docs/get-started', 226),
('TASK', 'Astro', 'Astro is an all-in-one web framework for building fast, content-focused websites. Astro combines the power of a modern component-based framework with the performance and flexibility of a static site generator.', 216),
('LINK', 'Official Astro Website', 'https://astro.build/', 229),
('LINK', 'Official Astro Docs', 'https://docs.astro.build/', 229),
('TASK', 'Eleventy', 'Eleventy (11ty) is a simple to use, easy to customize, highly performant and powerful static site generator with a helpful set of plugins (e.g. navigation, build-time image transformations, cache assets). Pages can be built and written with a variety of template languages (HTML, Markdown, JavaScript, Liquid, Nunjucks, Handlebars, Mustache, EJS, Haml, Pug or JS template literals). But it also offers the possibility to dynamically create pages from local data or external sources that are compiled at build time. It has zero client-side JavaScript dependencies.', 216),
('LINK', 'Official Website', 'https://www.11ty.dev/', 232),
('LINK', 'Introduction to Eleventy', 'https://www.youtube.com/watch?v=-dM6AmNmMFA', 232),
('TASK', 'Next.js', 'Next.js is an open-source development framework built on top of Node.js enabling React based web applications functionalities such as server-side rendering and generating static websites.', 216),
('LINK', 'Official Website', 'https://nextjs.org/', 235),
('LINK', 'Official Docs for Getting Started', 'https://nextjs.org/docs/getting-started', 235),
('TASK', 'Remix', 'Remix is a full stack web framework that lets you focus on the user interface and work back through web standards to deliver a fast, slick, and resilient user experience. People are gonna love using your stuff.', 216),
('LINK', 'Official Website', 'https://remix.run/', 238),
('LINK', 'Official Docs for Getting Started', 'https://remix.run/docs/en/v1#getting-started', 238),
('SKILL', 'Progressive Web Apps', 'Progressive Web Apps (PWAs) are websites that are progressively enhanced to function like installed, native apps on supporting platforms, while functioning like regular websites on other browsers.', NULL),
('TASK', 'RAIL Model', 'The RAIL model is a performance optimization model for web applications that focuses on improving the perceived performance of a web page.', 241),
('LINK', 'RAIL Model - Google Developers', 'https://developers.google.com/web/fundamentals/performance/rail', 242),
('TASK', 'PRPL Pattern', 'The PRPL pattern is a performance optimization pattern for web applications that focuses on minimizing the time it takes for the initial rendering of a web page.', 241),
('LINK', 'PRPL Pattern - Google Developers', 'https://developers.google.com/web/fundamentals/performance/prpl-pattern', 244),
('TASK', 'Performance Metric', 'Web performance metrics are quantitative measures of the performance of a web page or application. They are used to assess the speed and efficiency of a web page, and they can help identify areas for improvement.', 241),
('LINK', 'Web Performance Metrics - Google Developers', 'https://developers.google.com/web/fundamentals/performance/user-centric-performance-metrics', 246),
('TASK', 'Using Lighthouse', 'Lighthouse is an open-source tool developed by Google that is used to audit the performance, accessibility, and SEO of web pages. It is available as a browser extension and as a command-line tool, and it can be run on any web page to generate a report with recommendations for improvement.', 241),
('LINK', 'Lighthouse - Google Developers', 'https://developers.google.com/web/tools/lighthouse', 248),
('TASK', 'Using DevTools', 'Most of the browsers have built-in developer tools that help you perform web development specific tasks on a webpage. My personal recommendation would be to use Chrome DevTools as it is the most advanced and has the most features. However, if you are using a different browser, you can still use the DevTools to debug your web application.', 241),
('LINK', 'Chrome DevTools - Google Developers', 'https://developers.google.com/web/tools/chrome-devtools', 250),
('TASK', 'Web Storage API', 'The Web Storage API provides mechanisms for storing key-value pairs in a web browser. It includes two storage objects: localStorage and sessionStorage, which allow you to save data on the client side and persist it across multiple browser sessions, respectively.', 241),
('LINK', 'Web Storage API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API', 252),
('TASK', 'Web Sockets', 'Web Sockets is a technology that allows for full-duplex communication over a single TCP connection. It enables real-time, bi-directional communication between a client and a server, and is typically used in applications that require high-speed, low-latency communication, such as online gaming and real-time data streaming.', 241),
('LINK', 'Web Sockets - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API', 254),
('TASK', 'Server Sent Events', 'Server-Sent Events (SSE) is a technology that allows a web server to push data to a client in real-time. It uses an HTTP connection to send a stream of data from the server to the client, and the client can listen for these events and take action when they are received.', 241),
('LINK', 'Server-Sent Events - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events', 256),
('TASK', 'Service Workers', 'Service Workers are a type of web worker that acts as a proxy between a web page and the network, allowing web developers to build offline-first and reliable applications. Service Workers can intercept network requests, access the cache, and make decisions on how to respond to a request based on the available resources.', 241),
('LINK', 'Service Workers - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API', 258),
('TASK', 'Location API', 'The Geolocation API is a web API that provides access to the device’s location data, such as latitude and longitude. It allows web developers to build location-based applications, such as mapping and location sharing, by using the device’s GPS, Wi-Fi, and other sensors to determine the user’s location.', 241),
('LINK', 'Geolocation API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Geolocation_API', 260),
('TASK', 'Notifications API', 'The Notifications API is a web API that allows web pages to display system-level notifications to the user. These notifications can be used to alert the user of important events, such as new messages or updates, even when the web page is not open in the browser.', 241),
('LINK', 'Notifications API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API', 262),
('TASK', 'Device Orientation API', 'The Device Orientation API is a web API that provides access to the device’s orientation and motion data, such as its pitch, roll, and yaw. It allows web developers to build applications that can respond to the device’s orientation and motion, such as augmented reality and motion-controlled games.', 241),
('LINK', 'Device Orientation API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Device_orientation_events', 264),
('TASK', 'Payments', 'The Payment Request API is a web API that allows web developers to build checkout flows within their web applications. It provides a standardized, browser-based interface for collecting payment and shipping information from the user, and it supports a wide range of payment methods, including credit cards, debit cards, and digital wallets.', 241),
('LINK', 'Payments Request API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Payment_Request_API', 266),
('TASK', 'Credentials API', 'The Payment Request API is a web API that allows web developers to build checkout flows within their web applications. It provides a standardized, browser-based interface for collecting payment and shipping information from the user, and it supports a wide range of payment methods, including credit cards, debit cards, and digital wallets.', 241),
('LINK', 'Credentials Management API - MDN', 'https://developer.mozilla.org/en-US/docs/Web/API/Credential_Management_API', 268),
('SKILL', 'Mobile applications', 'A while back, developing a mobile app using JavaScript was impossible. But now JavaScript developers can create mobile applications using their knowledge for web development. Here is the list of options to create mobile applications in JavaScript.', NULL),
('TASK', 'React Native', 'React Native is a popular JavaScript-based mobile app framework that allows you to build natively-rendered mobile apps for iOS and Android. The framework lets you create an application for various platforms by using the same codebase.', 270),
('LINK', 'Official Website', 'https://reactnative.dev/', 271),
('LINK', 'Official Getting Started to React Native', 'https://reactnative.dev/docs/getting-started', 271),
('TASK', 'Flutter', 'Flutter is a free and open-source mobile UI framework created by Google and released in May 2017. In a few words, it allows you to create a native mobile application with only one codebase. This means that you can use one programming language and one codebase to create two different apps (for iOS and Android).', 270),
('LINK', 'Flutter Website', 'https://flutter.dev/', 274),
('LINK', 'Flutter Tutorial', 'https://www.w3adda.com/flutter-tutorial', 274),
('TASK', 'Ionic', 'Ionic framework is an open-source UI toolkit for building performant, high-quality mobile apps, desktop apps, and progressive web apps using web technologies such as HTML, CSS, and JavaScript.', 270),
('LINK', 'Official Website', 'https://ionicframework.com/', 277),
('LINK', 'Official Getting Started to React Native', 'https://ionicframework.com/docs/', 277),
('TASK', 'NativeScript', 'NativeScript is an open source framework for creating native iOS and Android apps in Angular, TypeScript, or JavaScript.', 270),
('LINK', 'Official Website', 'https://nativescript.org/', 280),
('LINK', 'Official Getting Started to React Native', 'https://docs.nativescript.org/', 280),
('SKILL', 'Desktop Applications in JavaScript', 'A while back, developing a desktop app using JavaScript was impossible. But now JavaScript developers can create desktop applications using their knowledge for web development. Here is the list of options to create desktop applications in JavaScript.', NULL),
('TASK', 'Flutter', 'Flutter is a free and open-source mobile UI framework created by Google and released in May 2017. In a few words, it allows you to create a native mobile application with only one codebase. This means that you can use one programming language and one codebase to create two different apps (for iOS and Android).', 283),
('LINK', 'Flutter Website', 'https://flutter.dev/', 284),
('LINK', 'Flutter Tutorial', 'https://www.w3adda.com/flutter-tutorial', 284),
('TASK', 'Tauri', 'Tauri is a toolkit that helps developers make applications for the major desktop platforms - using virtually any frontend framework in existence. The core is built with Rust, and the CLI leverages Node.js making Tauri a genuinely polyglot approach to creating and maintaining great apps.', 283),
('LINK', 'Tauri Website', 'https://tauri.app/', 287),
('LINK', 'Tauri Docs', 'https://tauri.app/v1/guides/', 287),
('TASK', 'Electron', 'Electron allows you to build cross-platform desktop applications with HTML, CSS, and Javascript/Typescript. It uses Chromium and Node.js, so essentially it is a “Browser” like application that is compatible with Mac, Windows, and Linux.', 283),
('LINK', 'Electron Website', 'https://www.electronjs.org/', 290),
('LINK', 'Electron Docs', 'https://www.electronjs.org/docs/latest/', 290);